[
  {
    "name": "Router",
    "type": "impl",
    "interface_name": "FibrousRouter::interfaces::IROUTER::IRouter"
  },
  {
    "name": "core::integer::u256",
    "type": "struct",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "name": "FibrousRouter::utils::structs::RouteParam",
    "type": "struct",
    "members": [
      {
        "name": "token_in",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "token_out",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "amount_in",
        "type": "core::integer::u256"
      },
      {
        "name": "min_received",
        "type": "core::integer::u256"
      },
      {
        "name": "destination",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "name": "FibrousRouter::utils::structs::SwapParams",
    "type": "struct",
    "members": [
      {
        "name": "token_in",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "token_out",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "rate",
        "type": "core::integer::u32"
      },
      {
        "name": "protocol_id",
        "type": "core::felt252"
      },
      {
        "name": "pool_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "extra_data",
        "type": "core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "name": "FibrousRouter::interfaces::IROUTER::IRouter",
    "type": "interface",
    "items": [
      {
        "name": "getOwner",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "getDirectFee",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "getRouterFee",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "getStarkRockAddress",
        "type": "function",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "getSwapHandler",
        "type": "function",
        "inputs": [
          {
            "name": "protocol_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "state_mutability": "view"
      },
      {
        "name": "locked",
        "type": "function",
        "inputs": [
          {
            "name": "id",
            "type": "core::integer::u32"
          },
          {
            "name": "data",
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<core::felt252>"
          }
        ],
        "state_mutability": "external"
      },
      {
        "name": "swap",
        "type": "function",
        "inputs": [
          {
            "name": "route",
            "type": "FibrousRouter::utils::structs::RouteParam"
          },
          {
            "name": "swap_parameters",
            "type": "core::array::Array::<FibrousRouter::utils::structs::SwapParams>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setDirectSwapFee",
        "type": "function",
        "inputs": [
          {
            "name": "new_fee",
            "type": "core::integer::u32"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setRouterFee",
        "type": "function",
        "inputs": [
          {
            "name": "new_fee",
            "type": "core::integer::u32"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setStarkRockAddress",
        "type": "function",
        "inputs": [
          {
            "name": "new_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setOwner",
        "type": "function",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setFeeHandler",
        "type": "function",
        "inputs": [
          {
            "name": "new_fee_handler",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "setSwapHandler",
        "type": "function",
        "inputs": [
          {
            "name": "protocol_id",
            "type": "core::felt252"
          },
          {
            "name": "handler",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "name": "upgrade",
        "type": "function",
        "inputs": [
          {
            "name": "new_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "name": "constructor",
    "type": "constructor",
    "inputs": [
      {
        "name": "_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "FibrousRouter::router::Router::Swap",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "sender",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "token_in",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "token_out",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "amount_in",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "amount_out",
        "type": "core::integer::u256"
      },
      {
        "kind": "data",
        "name": "to",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "FibrousRouter::router::Router::AddHandler",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "protocol_id",
        "type": "core::felt252"
      },
      {
        "kind": "data",
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash"
      }
    ]
  },
  {
    "kind": "struct",
    "name": "FibrousRouter::router::Router::OwnerChanged",
    "type": "event",
    "members": [
      {
        "kind": "data",
        "name": "old_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "kind": "data",
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "kind": "enum",
    "name": "FibrousRouter::router::Router::Event",
    "type": "event",
    "variants": [
      {
        "kind": "nested",
        "name": "Swap",
        "type": "FibrousRouter::router::Router::Swap"
      },
      {
        "kind": "nested",
        "name": "AddHandler",
        "type": "FibrousRouter::router::Router::AddHandler"
      },
      {
        "kind": "nested",
        "name": "OwnerChanged",
        "type": "FibrousRouter::router::Router::OwnerChanged"
      }
    ]
  }
]